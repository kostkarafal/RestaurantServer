#LOCAL MYSQL DATABASE
#spring.datasource.url = jdbc:mysql://localhost:3306/restaurant?useUnicode=yes&characterEncoding=UTF-8
#spring.datasource.driverClassName = com.mysql.jdbc.Driver
#spring.datasource.username = root
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

#HEROKU POSTGREE DATABASE
spring.datasource.url = jdbc:postgresql://ec2-46-137-75-170.eu-west-1.compute.amazonaws.com/d4vsh4s05e7l69?user=byrsmdbzgtocxb&password=13381ffea0f6c3aebb2d69c3b2063888ce071bf7c7bcc966a1dca9fb7b7a016e&sslmode=require&useUnicode=yes&characterEncoding=UTF-8
spring.datasource.driver-class-name= org.postgresql.Driver
spring.datasource.username=byrsmdbzgtocxb
spring.datasource.password=13381ffea0f6c3aebb2d69c3b2063888ce071bf7c7bcc966a1dca9fb7b7a016e
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

server.port=8062

## Hibernate Logging
logging.level.org.hibernate.SQL= DEBUG

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

security.oauth2.resource.filter-order=3

security.signing-key=MaYzkSjmkzPC57L
security.encoding-strength=256
security.security-realm=Spring Boot JWT Example Realm

security.jwt.client-id=clientid
security.jwt.client-secret=clientsecret
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=testjwtresourceid

facebook-user-info-uri=https://graph.facebook.com/me?fields=id,first_name,last_name,email

